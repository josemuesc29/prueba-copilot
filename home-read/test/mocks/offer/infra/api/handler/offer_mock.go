// Code generated by MockGen. DO NOT EDIT.
// Source: offer.go
//
// Generated by this command:
//
//	mockgen -source=offer.go -destination=../../../../../test/mocks/offer/infra/api/handler/offer_mock.go
//

// Package mock_handler is a generated GoMock package.
package mock_handler

import (
	reflect "reflect"

	gin "github.com/gin-gonic/gin"
	gomock "go.uber.org/mock/gomock"
)

// MockHandler is a mock of Handler interface.
type MockHandler struct {
	ctrl     *gomock.Controller
	recorder *MockHandlerMockRecorder
	isgomock struct{}
}

// MockHandlerMockRecorder is the mock recorder for MockHandler.
type MockHandlerMockRecorder struct {
	mock *MockHandler
}

// NewMockHandler creates a new mock instance.
func NewMockHandler(ctrl *gomock.Controller) *MockHandler {
	mock := &MockHandler{ctrl: ctrl}
	mock.recorder = &MockHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHandler) EXPECT() *MockHandlerMockRecorder {
	return m.recorder
}

// GetFlashOffer mocks base method.
func (m *MockHandler) GetFlashOffer(c *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "GetFlashOffer", c)
}

// GetFlashOffer indicates an expected call of GetFlashOffer.
func (mr *MockHandlerMockRecorder) GetFlashOffer(c any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFlashOffer", reflect.TypeOf((*MockHandler)(nil).GetFlashOffer), c)
}
