// Code generated by MockGen. DO NOT EDIT.
// Source: proxy_cms.go
//
// Generated by this command:
//
//	mockgen -source=proxy_cms.go -destination=../../../../../test/mocks/carousel/domain/ports/out/proxy_cms_mock.go
//

// Package mock_out is a generated GoMock package.
package mock_out

import (
	model "ftd-td-home-read-services/internal/carousel/domain/model"
	reflect "reflect"

	gin "github.com/gin-gonic/gin"
	gomock "go.uber.org/mock/gomock"
)

// MockProxyCMS is a mock of ProxyCMS interface.
type MockProxyCMS struct {
	ctrl     *gomock.Controller
	recorder *MockProxyCMSMockRecorder
	isgomock struct{}
}

// MockProxyCMSMockRecorder is the mock recorder for MockProxyCMS.
type MockProxyCMSMockRecorder struct {
	mock *MockProxyCMS
}

// NewMockProxyCMS creates a new mock instance.
func NewMockProxyCMS(ctrl *gomock.Controller) *MockProxyCMS {
	mock := &MockProxyCMS{ctrl: ctrl}
	mock.recorder = &MockProxyCMSMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockProxyCMS) EXPECT() *MockProxyCMSMockRecorder {
	return m.recorder
}

// GetSuggested mocks base method.
func (m *MockProxyCMS) GetSuggested(c *gin.Context, countryID string) (model.SuggestedCMS, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSuggested", c, countryID)
	ret0, _ := ret[0].(model.SuggestedCMS)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSuggested indicates an expected call of GetSuggested.
func (mr *MockProxyCMSMockRecorder) GetSuggested(c, countryID any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSuggested", reflect.TypeOf((*MockProxyCMS)(nil).GetSuggested), c, countryID)
}
