// Code generated by MockGen. DO NOT EDIT.
// Source: carousel.go
//
// Generated by this command:
//
//	mockgen -source=carousel.go -destination=../../../../../test/mocks/carousel/infra/api/handler/carousel_mock.go
//

// Package mock_handler is a generated GoMock package.
package mock_handler

import (
	reflect "reflect"

	gin "github.com/gin-gonic/gin"
	gomock "go.uber.org/mock/gomock"
)

// MockCarousel is a mock of Carousel interface.
type MockCarousel struct {
	ctrl     *gomock.Controller
	recorder *MockCarouselMockRecorder
	isgomock struct{}
}

// MockCarouselMockRecorder is the mock recorder for MockCarousel.
type MockCarouselMockRecorder struct {
	mock *MockCarousel
}

// NewMockCarousel creates a new mock instance.
func NewMockCarousel(ctrl *gomock.Controller) *MockCarousel {
	mock := &MockCarousel{ctrl: ctrl}
	mock.recorder = &MockCarouselMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCarousel) EXPECT() *MockCarouselMockRecorder {
	return m.recorder
}

// GetSuggested mocks base method.
func (m *MockCarousel) GetSuggested(c *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "GetSuggested", c)
}

// GetSuggested indicates an expected call of GetSuggested.
func (mr *MockCarouselMockRecorder) GetSuggested(c any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSuggested", reflect.TypeOf((*MockCarousel)(nil).GetSuggested), c)
}
