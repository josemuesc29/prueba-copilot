// Code generated by MockGen. DO NOT EDIT.
// Source: handler.go
//
// Generated by this command:
//
//	mockgen -source=handler.go -destination=../../../../../test/mocks/structure/infra/api/handler/structure_mock.go
//

// Package mock_handler is a generated GoMock package.
package mock_handler

import (
	reflect "reflect"

	gin "github.com/gin-gonic/gin"
	gomock "go.uber.org/mock/gomock"
)

// MockStructureHandler is a mock of StructureHandler interface.
type MockStructureHandler struct {
	ctrl     *gomock.Controller
	recorder *MockStructureHandlerMockRecorder
	isgomock struct{}
}

// MockStructureHandlerMockRecorder is the mock recorder for MockStructureHandler.
type MockStructureHandlerMockRecorder struct {
	mock *MockStructureHandler
}

// NewMockStructureHandler creates a new mock instance.
func NewMockStructureHandler(ctrl *gomock.Controller) *MockStructureHandler {
	mock := &MockStructureHandler{ctrl: ctrl}
	mock.recorder = &MockStructureHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStructureHandler) EXPECT() *MockStructureHandlerMockRecorder {
	return m.recorder
}

// GetStructure mocks base method.
func (m *MockStructureHandler) GetStructure(c *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "GetStructure", c)
}

// GetStructure indicates an expected call of GetStructure.
func (mr *MockStructureHandlerMockRecorder) GetStructure(c any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStructure", reflect.TypeOf((*MockStructureHandler)(nil).GetStructure), c)
}
