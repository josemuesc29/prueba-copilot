// Code generated by MockGen. DO NOT EDIT.
// Source: catalog_category.go
//
// Generated by this command:
//
//	mockgen -source=catalog_category.go -destination=../../../../../test/mocks/shared/domain/ports/out/catalog_category_mock.go
//

// Package mock_out is a generated GoMock package.
package mock_out

import (
	model "ftd-td-catalog-item-read-services/internal/shared/domain/model"
	reflect "reflect"

	gin "github.com/gin-gonic/gin"
	gomock "go.uber.org/mock/gomock"
)

// MockCatalogCategoryOutPort is a mock of CatalogCategoryOutPort interface.
type MockCatalogCategoryOutPort struct {
	ctrl     *gomock.Controller
	recorder *MockCatalogCategoryOutPortMockRecorder
}

// MockCatalogCategoryOutPortMockRecorder is the mock recorder for MockCatalogCategoryOutPort.
type MockCatalogCategoryOutPortMockRecorder struct {
	mock *MockCatalogCategoryOutPort
}

// NewMockCatalogCategoryOutPort creates a new mock instance.
func NewMockCatalogCategoryOutPort(ctrl *gomock.Controller) *MockCatalogCategoryOutPort {
	mock := &MockCatalogCategoryOutPort{ctrl: ctrl}
	mock.recorder = &MockCatalogCategoryOutPortMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCatalogCategoryOutPort) EXPECT() *MockCatalogCategoryOutPortMockRecorder {
	return m.recorder
}

// GetCategoryByDepartment mocks base method.
func (m *MockCatalogCategoryOutPort) GetCategoryByDepartment(ctx *gin.Context, countryID, departmentID string) (model.CatalogCategory, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCategoryByDepartment", ctx, countryID, departmentID)
	ret0, _ := ret[0].(model.CatalogCategory)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCategoryByDepartment indicates an expected call of GetCategoryByDepartment.
func (mr *MockCatalogCategoryOutPortMockRecorder) GetCategoryByDepartment(ctx, countryID, departmentID any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCategoryByDepartment", reflect.TypeOf((*MockCatalogCategoryOutPort)(nil).GetCategoryByDepartment), ctx, countryID, departmentID)
}
