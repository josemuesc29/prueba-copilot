// Code generated by MockGen. DO NOT EDIT.
// Source: internal/structure/infra/api/handler/handler.go
//
// Generated by this command:
//
//	mockgen -source=internal/structure/infra/api/handler/handler.go -destination=test/mocks/structure/infra/api/handler/handler_mock.go -package=mock_handler
//

// Package mock_handler is a generated GoMock package.
package mock_handler

import (
	reflect "reflect"

	gin "github.com/gin-gonic/gin"
	gomock "go.uber.org/mock/gomock"
)

// MockItemStructureHandler is a mock of ItemStructureHandler interface.
type MockItemStructureHandler struct {
	ctrl     *gomock.Controller
	recorder *MockItemStructureHandlerMockRecorder
	isgomock struct{}
}

// MockItemStructureHandlerMockRecorder is the mock recorder for MockItemStructureHandler.
type MockItemStructureHandlerMockRecorder struct {
	mock *MockItemStructureHandler
}

// NewMockItemStructureHandler creates a new mock instance.
func NewMockItemStructureHandler(ctrl *gomock.Controller) *MockItemStructureHandler {
	mock := &MockItemStructureHandler{ctrl: ctrl}
	mock.recorder = &MockItemStructureHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockItemStructureHandler) EXPECT() *MockItemStructureHandlerMockRecorder {
	return m.recorder
}

// GetStructure mocks base method.
func (m *MockItemStructureHandler) GetStructure(c *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "GetStructure", c)
}

// GetStructure indicates an expected call of GetStructure.
func (mr *MockItemStructureHandlerMockRecorder) GetStructure(c any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStructure", reflect.TypeOf((*MockItemStructureHandler)(nil).GetStructure), c)
}
