// Code generated by MockGen. DO NOT EDIT.
// Source: internal/infra/api/groups/user/usersGroup.go
//
// Generated by this command:
//
//	mockgen -source=internal/infra/api/groups/user/usersGroup.go -destination=test/mocks/infra/api/groups/usersGroup_mock.go -package=mocks_groups
//

// Package mocks_groups is a generated GoMock package.
package mocks_groups

import (
	reflect "reflect"

	gin "github.com/gin-gonic/gin"
	gomock "go.uber.org/mock/gomock"
)

// MockUserGroupInterface is a mock of UserGroupInterface interface.
type MockUserGroupInterface struct {
	ctrl     *gomock.Controller
	recorder *MockUserGroupInterfaceMockRecorder
	isgomock struct{}
}

// MockUserGroupInterfaceMockRecorder is the mock recorder for MockUserGroupInterface.
type MockUserGroupInterfaceMockRecorder struct {
	mock *MockUserGroupInterface
}

// NewMockUserGroupInterface creates a new mock instance.
func NewMockUserGroupInterface(ctrl *gomock.Controller) *MockUserGroupInterface {
	mock := &MockUserGroupInterface{ctrl: ctrl}
	mock.recorder = &MockUserGroupInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserGroupInterface) EXPECT() *MockUserGroupInterfaceMockRecorder {
	return m.recorder
}

// Source mocks base method.
func (m *MockUserGroupInterface) Source(rg *gin.RouterGroup) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Source", rg)
}

// Source indicates an expected call of Source.
func (mr *MockUserGroupInterfaceMockRecorder) Source(rg any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Source", reflect.TypeOf((*MockUserGroupInterface)(nil).Source), rg)
}
