// Code generated by MockGen. DO NOT EDIT.
// Source: internal/infra/api/handler/template/template.go
//
// Generated by this command:
//
//	mockgen -source=internal/infra/api/handler/template/template.go -destination=test/mocks/infra/api/handler/template_mock.go -package=mocks_handler
//

// Package mocks_handler is a generated GoMock package.
package mocks_handler

import (
	reflect "reflect"

	gin "github.com/gin-gonic/gin"
	gomock "go.uber.org/mock/gomock"
)

// MockTemplate is a mock of Template interface.
type MockTemplate struct {
	ctrl     *gomock.Controller
	recorder *MockTemplateMockRecorder
	isgomock struct{}
}

// MockTemplateMockRecorder is the mock recorder for MockTemplate.
type MockTemplateMockRecorder struct {
	mock *MockTemplate
}

// NewMockTemplate creates a new mock instance.
func NewMockTemplate(ctrl *gomock.Controller) *MockTemplate {
	mock := &MockTemplate{ctrl: ctrl}
	mock.recorder = &MockTemplateMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTemplate) EXPECT() *MockTemplateMockRecorder {
	return m.recorder
}

// GetTemplate mocks base method.
func (m *MockTemplate) GetTemplate(c *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "GetTemplate", c)
}

// GetTemplate indicates an expected call of GetTemplate.
func (mr *MockTemplateMockRecorder) GetTemplate(c any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTemplate", reflect.TypeOf((*MockTemplate)(nil).GetTemplate), c)
}
