// Code generated by MockGen. DO NOT EDIT.
// Source: products_related.go
//
// Generated by this command:
//
//	mockgen -source=products_related.go -destination=../../../../../test/mocks/products-related/infra/api/handler/products_related_mock.go
//

// Package mock_handler is a generated GoMock package.
package mock_handler

import (
	reflect "reflect"

	gin "github.com/gin-gonic/gin"
	gomock "go.uber.org/mock/gomock"
)

// MockProductsRelatedHandler is a mock of ProductsRelatedHandler interface.
type MockProductsRelatedHandler struct {
	ctrl     *gomock.Controller
	recorder *MockProductsRelatedHandlerMockRecorder
	isgomock struct{}
}

// MockProductsRelatedHandlerMockRecorder is the mock recorder for MockProductsRelatedHandler.
type MockProductsRelatedHandlerMockRecorder struct {
	mock *MockProductsRelatedHandler
}

// NewMockProductsRelatedHandler creates a new mock instance.
func NewMockProductsRelatedHandler(ctrl *gomock.Controller) *MockProductsRelatedHandler {
	mock := &MockProductsRelatedHandler{ctrl: ctrl}
	mock.recorder = &MockProductsRelatedHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockProductsRelatedHandler) EXPECT() *MockProductsRelatedHandlerMockRecorder {
	return m.recorder
}

// GetRelatedItems mocks base method.
func (m *MockProductsRelatedHandler) GetRelatedItems(c *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "GetRelatedItems", c)
}

// GetRelatedItems indicates an expected call of GetRelatedItems.
func (mr *MockProductsRelatedHandlerMockRecorder) GetRelatedItems(c any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRelatedItems", reflect.TypeOf((*MockProductsRelatedHandler)(nil).GetRelatedItems), c)
}
