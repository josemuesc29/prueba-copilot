// Code generated by MockGen. DO NOT EDIT.
// Source: same_brand.go
//
// Generated by this command:
//
//	mockgen -source=same_brand.go -destination=../../../../../test/mocks/same-brand/infra/api/handler/same_brand_mock.go
//

// Package mock_handler is a generated GoMock package.
package mock_handler

import (
	reflect "reflect"

	gin "github.com/gin-gonic/gin"
	gomock "go.uber.org/mock/gomock"
)

// MockSameBrand is a mock of SameBrand interface.
type MockSameBrand struct {
	ctrl     *gomock.Controller
	recorder *MockSameBrandMockRecorder
	isgomock struct{}
}

// MockSameBrandMockRecorder is the mock recorder for MockSameBrand.
type MockSameBrandMockRecorder struct {
	mock *MockSameBrand
}

// NewMockSameBrand creates a new mock instance.
func NewMockSameBrand(ctrl *gomock.Controller) *MockSameBrand {
	mock := &MockSameBrand{ctrl: ctrl}
	mock.recorder = &MockSameBrandMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSameBrand) EXPECT() *MockSameBrandMockRecorder {
	return m.recorder
}

// GetItemsSameBrand mocks base method.
func (m *MockSameBrand) GetItemsSameBrand(c *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "GetItemsSameBrand", c)
}

// GetItemsSameBrand indicates an expected call of GetItemsSameBrand.
func (mr *MockSameBrandMockRecorder) GetItemsSameBrand(c any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetItemsSameBrand", reflect.TypeOf((*MockSameBrand)(nil).GetItemsSameBrand), c)
}
