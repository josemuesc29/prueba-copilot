// Code generated by MockGen. DO NOT EDIT.
// Source: best_seller.go
//
// Generated by this command:
//
//	mockgen -source=best_seller.go -destination=../../../../../test/mocks/best-seller/infra/api/handler/best_seller_mock.go
//

// Package mock_handler is a generated GoMock package.
package mock_handler

import (
	reflect "reflect"

	gin "github.com/gin-gonic/gin"
	gomock "go.uber.org/mock/gomock"
)

// MockBestSeller is a mock of BestSeller interface.
type MockBestSeller struct {
	ctrl     *gomock.Controller
	recorder *MockBestSellerMockRecorder
	isgomock struct{}
}

// MockBestSellerMockRecorder is the mock recorder for MockBestSeller.
type MockBestSellerMockRecorder struct {
	mock *MockBestSeller
}

// NewMockBestSeller creates a new mock instance.
func NewMockBestSeller(ctrl *gomock.Controller) *MockBestSeller {
	mock := &MockBestSeller{ctrl: ctrl}
	mock.recorder = &MockBestSellerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBestSeller) EXPECT() *MockBestSellerMockRecorder {
	return m.recorder
}

// GetBestSellerDepartment mocks base method.
func (m *MockBestSeller) GetBestSellerDepartment(c *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "GetBestSellerDepartment", c)
}

// GetBestSellerDepartment indicates an expected call of GetBestSellerDepartment.
func (mr *MockBestSellerMockRecorder) GetBestSellerDepartment(c any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBestSellerDepartment", reflect.TypeOf((*MockBestSeller)(nil).GetBestSellerDepartment), c)
}
